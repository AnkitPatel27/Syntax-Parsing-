// Parse Tree
digraph {
	S
	S -> "n (0)"
	S -> "B (1)"
	"B (1)" -> "n (2)"
	"B (1)" -> "B (3)"
	"B (1)" -> "A (4)"
	"B (1)" -> "B (5)"
	"B (3)" -> "$ (6)"
	"A (4)" -> "+ (7)"
	"B (5)" -> "n (8)"
	"B (5)" -> "B (9)"
	"B (5)" -> "A (10)"
	"B (5)" -> "B (11)"
	"B (9)" -> "n (12)"
	"B (9)" -> "B (13)"
	"B (9)" -> "A (14)"
	"B (9)" -> "B (15)"
	"B (13)" -> "$ (16)"
	"A (14)" -> "+ (17)"
	"B (15)" -> "$ (18)"
	"A (10)" -> "+ (19)"
	"B (11)" -> "$ (20)"
}
