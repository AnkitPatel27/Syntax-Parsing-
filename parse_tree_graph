// Parse Tree
digraph {
	S
	S -> "n (0)"
	S -> "B (1)"
	"B (1)" -> "n (2)"
	"B (1)" -> "B (3)"
	"B (1)" -> "A (4)"
	"B (1)" -> "B (5)"
	"B (3)" -> "$ (6)"
	"A (4)" -> "* (7)"
	"B (5)" -> "n (8)"
	"B (5)" -> "B (9)"
	"B (5)" -> "A (10)"
	"B (5)" -> "B (11)"
	"B (9)" -> "n (12)"
	"B (9)" -> "B (13)"
	"B (9)" -> "A (14)"
	"B (9)" -> "B (15)"
	"B (13)" -> "$ (16)"
	"A (14)" -> "+ (17)"
	"B (15)" -> "n (18)"
	"B (15)" -> "B (19)"
	"B (15)" -> "A (20)"
	"B (15)" -> "B (21)"
	"B (19)" -> "$ (22)"
	"A (20)" -> "+ (23)"
	"B (21)" -> "n (24)"
	"B (21)" -> "B (25)"
	"B (21)" -> "A (26)"
	"B (21)" -> "B (27)"
	"B (25)" -> "$ (28)"
	"A (26)" -> "+ (29)"
	"B (27)" -> "$ (30)"
	"A (10)" -> "* (31)"
	"B (11)" -> "$ (32)"
}
